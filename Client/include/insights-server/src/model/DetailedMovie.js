/**
 * Insights Server
 * feeds frontend for movie character insights app
 *
 * OpenAPI spec version: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (false) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BasicCharacter', 'model/Names', 'model/Picture'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient.js'), require('./BasicCharacter.js'), require('./Names.js'), require('./Picture.js'));
  } else {
    // Browser globals (root is window)
    if (!root.InsightsServer) {
      root.InsightsServer = {};
    }
    root.InsightsServer.DetailedMovie = factory(root.InsightsServer.ApiClient, root.InsightsServer.BasicCharacter, root.InsightsServer.Names, root.InsightsServer.Picture);
  }
}(this, function(ApiClient, BasicCharacter, Names, Picture) {
  'use strict';




  /**
   * The DetailedMovie model module.
   * @module model/DetailedMovie
   * @version 0.9.0
   */

  /**
   * Constructs a new <code>DetailedMovie</code>.
   * @alias module:model/DetailedMovie
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>DetailedMovie</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DetailedMovie} obj Optional instance to populate.
   * @return {module:model/DetailedMovie} The populated <code>DetailedMovie</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('_id')) {
        obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
      }
      if (data.hasOwnProperty('names')) {
        obj['names'] = Names.constructFromObject(data['names']);
      }
      if (data.hasOwnProperty('plot')) {
        obj['plot'] = ApiClient.convertToType(data['plot'], 'String');
      }
      if (data.hasOwnProperty('year')) {
        obj['year'] = ApiClient.convertToType(data['year'], 'Integer');
      }
      if (data.hasOwnProperty('picture')) {
        obj['picture'] = Picture.constructFromObject(data['picture']);
      }
      if (data.hasOwnProperty('imdbScore')) {
        obj['imdbScore'] = ApiClient.convertToType(data['imdbScore'], 'Number');
      }
      if (data.hasOwnProperty('imdbRatingAmount')) {
        obj['imdbRatingAmount'] = ApiClient.convertToType(data['imdbRatingAmount'], 'Integer');
      }
      if (data.hasOwnProperty('unifiedScore')) {
        obj['unifiedScore'] = ApiClient.convertToType(data['unifiedScore'], 'Number');
      }
      if (data.hasOwnProperty('duration')) {
        obj['duration'] = ApiClient.convertToType(data['duration'], 'Integer');
      }
      if (data.hasOwnProperty('genres')) {
        obj['genres'] = ApiClient.convertToType(data['genres'], ['String']);
      }
      if (data.hasOwnProperty('director')) {
        obj['director'] = ApiClient.convertToType(data['director'], 'String');
      }
      if (data.hasOwnProperty('characters')) {
        obj['characters'] = ApiClient.convertToType(data['characters'], [BasicCharacter]);
      }
    }
    return obj;
  }

  /**
   * Unique identifier representing a specific movie script.
   * @member {String} _id
   */
  exports.prototype['_id'] = undefined;
  /**
   * @member {module:model/Names} names
   */
  exports.prototype['names'] = undefined;
  /**
   * Movie plot
   * @member {String} plot
   */
  exports.prototype['plot'] = undefined;
  /**
   * Year when the movie was published.
   * @member {Integer} year
   */
  exports.prototype['year'] = undefined;
  /**
   * @member {module:model/Picture} picture
   */
  exports.prototype['picture'] = undefined;
  /**
   * imdb movie score
   * @member {Number} imdbScore
   */
  exports.prototype['imdbScore'] = undefined;
  /**
   * amount of imdb ratings for this movie
   * @member {Integer} imdbRatingAmount
   */
  exports.prototype['imdbRatingAmount'] = undefined;
  /**
   * combined score of imdbScore and imdbRatingAmount
   * @member {Number} unifiedScore
   */
  exports.prototype['unifiedScore'] = undefined;
  /**
   * Duration of movie in minutes.
   * @member {Integer} duration
   */
  exports.prototype['duration'] = undefined;
  /**
   * array of genres
   * @member {Array.<String>} genres
   */
  exports.prototype['genres'] = undefined;
  /**
   * Name of movie director.
   * @member {String} director
   */
  exports.prototype['director'] = undefined;
  /**
   * @member {Array.<module:model/BasicCharacter>} characters
   */
  exports.prototype['characters'] = undefined;



  return exports;
}));


