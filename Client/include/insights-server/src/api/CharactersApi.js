/**
 * Insights Server
 * feeds frontend for movie character insights app
 *
 * OpenAPI spec version: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (false) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BasicCharacter', 'model/Error', 'model/DetailedCharacter'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient.js'), require('../model/BasicCharacter.js'), require('../model/Error.js'), require('../model/DetailedCharacter.js'));
  } else {
    // Browser globals (root is window)
    if (!root.InsightsServer) {
      root.InsightsServer = {};
    }
    root.InsightsServer.CharactersApi = factory(root.InsightsServer.ApiClient, root.InsightsServer.BasicCharacter, root.InsightsServer.Error, root.InsightsServer.DetailedCharacter);
  }
}(this, function(ApiClient, BasicCharacter, Error, DetailedCharacter) {
  'use strict';

  /**
   * Characters service.
   * @module api/CharactersApi
   * @version 0.9.0
   */

  /**
   * Constructs a new CharactersApi. 
   * @alias module:api/CharactersApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getAllCharactersRequest operation.
     * @callback module:api/CharactersApi~getAllCharactersRequestCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/BasicCharacter>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of all available movie characters 
     * @param {module:api/CharactersApi~getAllCharactersRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/BasicCharacter>}
     */
    this.getAllCharactersRequest = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [BasicCharacter];

      return this.apiClient.callApi(
        '/characters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCharacterRequest operation.
     * @callback module:api/CharactersApi~getCharacterRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DetailedCharacter} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All information regarding one movie character
     * Returns all specific data available for one movie character: meta information and all available character insight information. 
     * @param {String} id The id of the movie character.
     * @param {module:api/CharactersApi~getCharacterRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DetailedCharacter}
     */
    this.getCharacterRequest = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id == undefined || id == null) {
        throw "Missing the required parameter 'id' when calling getCharacterRequest";
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = DetailedCharacter;

      return this.apiClient.callApi(
        '/characters/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
