/**
 * Insights Server
 * feeds frontend for movie character insights app
 *
 * OpenAPI spec version: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (false) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Answer', 'model/BasicCharacter', 'model/BasicMovie', 'model/DetailedCharacter', 'model/DetailedCharacterDescription', 'model/DetailedCharacterNames', 'model/DetailedMovie', 'model/Error', 'model/Insight', 'model/InsightDimension', 'model/InsightValueObject', 'model/Names', 'model/Picture', 'model/Question', 'model/QuizRequest', 'model/QuizResult', 'model/Search', 'model/SearchCharacter', 'model/SearchInsightDimension', 'model/SearchResult', 'model/Similarity', 'model/Text', 'api/CharactersApi', 'api/MoviesApi', 'api/QuizApi', 'api/SearchApi', 'api/UploadApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient.js'), require('./model/Answer.js'), require('./model/BasicCharacter.js'), require('./model/BasicMovie.js'), require('./model/DetailedCharacter.js'), require('./model/DetailedCharacterDescription.js'), require('./model/DetailedCharacterNames.js'), require('./model/DetailedMovie.js'), require('./model/Error.js'), require('./model/Insight.js'), require('./model/InsightDimension.js'), require('./model/InsightValueObject.js'), require('./model/Names.js'), require('./model/Picture.js'), require('./model/Question.js'), require('./model/QuizRequest.js'), require('./model/QuizResult.js'), require('./model/Search.js'), require('./model/SearchCharacter.js'), require('./model/SearchInsightDimension.js'), require('./model/SearchResult.js'), require('./model/Similarity.js'), require('./model/Text.js'), require('./api/CharactersApi.js'), require('./api/MoviesApi.js'), require('./api/QuizApi.js'), require('./api/SearchApi.js'), require('./api/UploadApi.js'));
  }
}(function(ApiClient, Answer, BasicCharacter, BasicMovie, DetailedCharacter, DetailedCharacterDescription, DetailedCharacterNames, DetailedMovie, Error, Insight, InsightDimension, InsightValueObject, Names, Picture, Question, QuizRequest, QuizResult, Search, SearchCharacter, SearchInsightDimension, SearchResult, Similarity, Text, CharactersApi, MoviesApi, QuizApi, SearchApi, UploadApi) {
  'use strict';

  /**
   * feeds_frontend_for_movie_character_insights_app.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var InsightsServer = require('index'); // See note below*.
   * var xxxSvc = new InsightsServer.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new InsightsServer.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new InsightsServer.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new InsightsServer.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.9.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Answer model constructor.
     * @property {module:model/Answer}
     */
    Answer: Answer,
    /**
     * The BasicCharacter model constructor.
     * @property {module:model/BasicCharacter}
     */
    BasicCharacter: BasicCharacter,
    /**
     * The BasicMovie model constructor.
     * @property {module:model/BasicMovie}
     */
    BasicMovie: BasicMovie,
    /**
     * The DetailedCharacter model constructor.
     * @property {module:model/DetailedCharacter}
     */
    DetailedCharacter: DetailedCharacter,
    /**
     * The DetailedCharacterDescription model constructor.
     * @property {module:model/DetailedCharacterDescription}
     */
    DetailedCharacterDescription: DetailedCharacterDescription,
    /**
     * The DetailedCharacterNames model constructor.
     * @property {module:model/DetailedCharacterNames}
     */
    DetailedCharacterNames: DetailedCharacterNames,
    /**
     * The DetailedMovie model constructor.
     * @property {module:model/DetailedMovie}
     */
    DetailedMovie: DetailedMovie,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The Insight model constructor.
     * @property {module:model/Insight}
     */
    Insight: Insight,
    /**
     * The InsightDimension model constructor.
     * @property {module:model/InsightDimension}
     */
    InsightDimension: InsightDimension,
    /**
     * The InsightValueObject model constructor.
     * @property {module:model/InsightValueObject}
     */
    InsightValueObject: InsightValueObject,
    /**
     * The Names model constructor.
     * @property {module:model/Names}
     */
    Names: Names,
    /**
     * The Picture model constructor.
     * @property {module:model/Picture}
     */
    Picture: Picture,
    /**
     * The Question model constructor.
     * @property {module:model/Question}
     */
    Question: Question,
    /**
     * The QuizRequest model constructor.
     * @property {module:model/QuizRequest}
     */
    QuizRequest: QuizRequest,
    /**
     * The QuizResult model constructor.
     * @property {module:model/QuizResult}
     */
    QuizResult: QuizResult,
    /**
     * The Search model constructor.
     * @property {module:model/Search}
     */
    Search: Search,
    /**
     * The SearchCharacter model constructor.
     * @property {module:model/SearchCharacter}
     */
    SearchCharacter: SearchCharacter,
    /**
     * The SearchInsightDimension model constructor.
     * @property {module:model/SearchInsightDimension}
     */
    SearchInsightDimension: SearchInsightDimension,
    /**
     * The SearchResult model constructor.
     * @property {module:model/SearchResult}
     */
    SearchResult: SearchResult,
    /**
     * The Similarity model constructor.
     * @property {module:model/Similarity}
     */
    Similarity: Similarity,
    /**
     * The Text model constructor.
     * @property {module:model/Text}
     */
    Text: Text,
    /**
     * The CharactersApi service constructor.
     * @property {module:api/CharactersApi}
     */
    CharactersApi: CharactersApi,
    /**
     * The MoviesApi service constructor.
     * @property {module:api/MoviesApi}
     */
    MoviesApi: MoviesApi,
    /**
     * The QuizApi service constructor.
     * @property {module:api/QuizApi}
     */
    QuizApi: QuizApi,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi,
    /**
     * The UploadApi service constructor.
     * @property {module:api/UploadApi}
     */
    UploadApi: UploadApi
  };

  return exports;
}));
